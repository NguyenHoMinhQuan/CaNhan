package BT.NganHang;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.InputMismatchException;
import java.util.Scanner;
import static BT.IListAccount.DS;
import BT.Main;
public class MainNH {
    static  Scanner sc = new Scanner(System.in);
    public static boolean kiemTraMatKhauHopLe(String matkhau) 
    {
        if (matkhau.length() < 5) 
            return false;
        if (!matkhau.matches(".*[A-Z].*")) 
            return false;
        if (!matkhau.matches(".*[a-z].*")) 
            return false;
        if (!matkhau.matches(".*\\d.*")) 
            return false;
        if (!matkhau.matches(".*[!@#$%^&*()].*")) 
            return false;
        return true;
    }
    public static int xuLyInt(String thongbao) {

        while (true) {
            try {
                System.out.print(thongbao);
                int input = sc.nextInt();
                return input;
            } catch (InputMismatchException e) {
                System.out.println("\nL·ªói: B·∫°n nh·∫≠p l·ª±a ch·ªçn ph·∫£i m·ªôt s·ªë nguy√™n!\n.");
                sc.nextLine();
            }
        }
    }
    public static double xuLyDouble(String thongbao) {
        while (true) {
            try {
                System.out.print(thongbao);
                double input = sc.nextDouble();
                return input;
            } catch (InputMismatchException e) {
                System.out.println("\nL·ªói: B·∫°n ph·∫£i nh·∫≠p m·ªôt s·ªë ti·ªÅn h·ª£p l·ªá ki·ªÉu s·ªë!\n.");
                sc.nextLine();
            }
        }
    }
   
    public static void main(String[] args) 
    {
        // DSTaiKhoang DS = DS;
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss dd-MM-yyyy");
        String stk;
        String matkhau;
        String maOTP;
        String SDT;
        int dem;
        int soLanNhapSai;
        int lc;

       while (true) 
        {
            System.out.println("\n-----------------üßë‚Äçüíº Ng√¢n h√†ng 4 anh em si√™u nh√¢n üßë‚Äçüíº-------------------");
            System.out.println("B·∫°n ch·ªçn l√†m g√¨:");
            System.out.println("1.ƒêƒÉng k√≠ t√†i kho·∫£n");
            System.out.println("2.ƒêƒÉng nh·∫≠p t√†i kho·∫£n");
            System.out.println("3.Qu√™n m·∫≠t kh·∫©u");
            System.out.println("0.Tho√°t ch∆∞∆°ng tr√¨nh");

            int n = xuLyInt("Nh·∫≠p s·ª± l·ª±a ch·ªçn: ");
            // sc.nextLine();
            switch (n) 
            {
                case 1:
                    DS.dangKiTaiKhoan();     
                break;
                case 2: 
                {
                    sc.nextLine();
                    System.out.print("Nh·∫≠p s·ªë t√†i kho·∫£n c·∫ßn ƒëƒÉng nh·∫≠p:");
                    stk = sc.nextLine();
                    TaiKhoan taikhoan = DS.searchAcount(stk);
                    TaiKhoanThanhToan taikhoanTT=(TaiKhoanThanhToan)taikhoan;
                    if (taikhoan != null) 
                    {
                        System.out.print("Nh·∫≠p m·∫≠t kh·∫©u t√†i kho·∫£n c·∫ßn ƒëƒÉng nh·∫≠p:");
                        matkhau = sc.nextLine();

                        soLanNhapSai=0;
                        while (!taikhoan.kiemtraMatKhau(matkhau) && soLanNhapSai<5) 
                        {
                            soLanNhapSai++;
                            System.out.printf("M·∫≠t kh·∫©u sai. Nh·∫≠p l·∫°i m·∫≠t kh·∫©u t√†i kho·∫£n c·∫ßn ƒëƒÉng nh·∫≠p l·∫ßn %d:", soLanNhapSai);
                            matkhau = sc.nextLine();  
                        }
                        if (soLanNhapSai >= 5)
                                taikhoan.khoaTaiKhoan(5,"");
                        if (!taikhoan.getLocket()) 
                        {
                            System.out.printf("\nT√†i kho·∫£n b·∫°n ch·ªçn l√†: %s\n", taikhoan.getStk());
                            System.out.printf("T√™n ch·ªß t√†i kho·∫£n l√†: %s\n", taikhoan.chutk);
                            do{
                                System.out.println("\n--------------ü§ë T√†i kho·∫£n ch√≠nh ü§ë----------------");
                                System.out.println("1.N·∫°p ti·ªÅn t√†i kho·∫£n");
                                System.out.println("2.R√∫t ti·ªÅn ");
                                System.out.println("3.Chuy·ªÉn kho·∫£ng");
                                System.out.println("4.Thanh to√°n ti·ªÅn ƒëi·ªán,n∆∞·ªõc,wifi,....");
                                System.out.println("5.Xem s·ªë d∆∞ t√†i kho·∫£n");
                                System.out.println("6.ƒê·ªïi m·∫≠t kh·∫©u");
                                System.out.println("7.L·ªãch s·ª≠");
                                System.out.println("0.Tho√°t!");

                                lc = xuLyInt("Nh·∫≠p l·ª±a ch·ªçn: ");
                      
                                switch (lc)
                                {
                                    case 1:
                                    {
                                    
                                        double tienNop = xuLyDouble("Nh·∫≠p s·ªë ti·ªÅn c·∫ßn n·∫°p: ");
                                        if(tienNop>=0)
                                        {
                                            taikhoanTT.napTiep(tienNop);                                  
                                            System.out.printf("S·ªë ti·ªÅn m·ªõi trong t√†i kho·∫£n thanh toan l√†: %.0f‚Ç´\n", taikhoanTT.getSodu()); 
                                            taikhoan.ThemLichSu("\nB·∫°n ƒë√£ n·ªôp ti·ªÅn v√†o t√†i kho·∫£n "+tienNop+"00ƒë l√∫c "+LocalDateTime.now().format(formatter).toString());
                                        }
                                        else
                                            System.out.println("S·ªë ti·ªÅn n·ªôp kh√¥ng h·ª£p l·ªá!");                                                 
                                    }
                                    break;
                                    case 2:
                                    {
                                        double tienRut = xuLyDouble("Nh·∫≠p s·ªë ti·ªÅn c·∫ßn r√∫t: ");
                                        soLanNhapSai=1;

                                        taikhoan.TaoOTP();
                                        do
                                        {
                                            System.out.printf("Nh·∫≠p m√£ OTP ƒë·ªÉ r√∫t l·∫ßn %d/5:",soLanNhapSai);
                                            maOTP=sc.nextLine();
                                            if(taikhoan.kiemTraMaOTP(maOTP))
                                            {

                                                if (taikhoanTT.getSodu() >= tienRut)
                                                {
                                                    
                                                    taikhoan.rutTien(tienRut);
                                                    System.out.printf("S·ªë ti·ªÅn m·ªõi trong t√†i kho·∫£n l√†: %.0f‚Ç´\n",taikhoanTT.getSodu());
                                                    taikhoan.ThemLichSu("\nB·∫°n ƒë√£ r√∫t "+tienRut+"00ƒë l√∫c "+LocalDateTime.now().format(formatter).toString());
                                                }
                                                else 
                                                {
                                                    System.out.println("\nS·ªë d∆∞ kh√¥ng ƒë·ªß ƒë·ªÉ th·ª±c hi·ªán giao d·ªãch.");
                                                    break;
                                                }
                                            }
                                            else
                                                soLanNhapSai++;
                                            
                                        }while(!taikhoan.kiemTraMaOTP(maOTP) && soLanNhapSai<=5);
                                        if(soLanNhapSai>=5)
                                        {
                                            taikhoanTT.khoaTaiKhoan(5,"");
                                            break;
                                        }
                                    }
                                    break;
                                    case 3:
                                    {
                                        System.out.print("Nh·∫≠p s·ªë t√†i kho·∫£n nh·∫≠n: ");
                                        String stkNhan = sc.nextLine();

                                        TaiKhoan tkNhan = DS.searchAcount(stkNhan);
                                        TaiKhoanThanhToan tkNhan1=(TaiKhoanThanhToan)tkNhan;
                                        if (tkNhan != null && !taikhoan.getStk().equals(stkNhan)) 
                                        {                                          
                                            System.out.printf("T√†i kho·∫£n nh·∫≠n: %s - %s\n", tkNhan.getStk(), tkNhan.chutk);

                                            taikhoan.TaoOTP();
                                            soLanNhapSai=1;
                                            boolean kt=false;
                                            do
                                            {
                                                double tienChuyen = xuLyDouble("Nh·∫≠p s·ªë ti·ªÅn c·∫ßn chuy·ªÉn: ");
                                                if(tienChuyen>0)
                                                {
                                                    System.out.printf("Nh·∫≠p m√£ OTP ƒë·ªÉ chuy·ªÉn kho·∫£n l·∫ßn %d/5:",soLanNhapSai);
                                                    maOTP=sc.nextLine();
                                                    if(taikhoan.kiemTraMaOTP(maOTP))
                                                    {
                                                        taikhoanTT.chuyenTien(tkNhan1, tienChuyen);    
                                                        taikhoan.ThemLichSu("\nB·∫°n ƒë√£ chuy·ªÉn ti·ªÅn cho t√†i kho·∫£n("+stkNhan+" - "+tkNhan.chutk+") "+tienChuyen+"00ƒë l√∫c "+LocalDateTime.now().format(formatter).toString());                               
                                                    }
                                                    else
                                                    {
                                                        System.out.println("M√£ OTP kh√¥ng ƒë√∫ng.Vui l√≤ng nh·∫≠p l·∫°i!");
                                                        soLanNhapSai++;
                                                    }
                                                }
                                                else
                                                    System.out.println("\nS·ªë ti·ªÅn chuy·ªÉn kh√¥ng h·ª£p l·ªá");

                                            }
                                            while(kt && soLanNhapSai<5);
                                            if(soLanNhapSai>5)
                                            {
                                                taikhoanTT.khoaTaiKhoan(5,"");
                                                kt=false;
                                                break;
                                            }
                                        }
                                        else    
                                            System.out.println("\nKh√¥ng t√¨m th·∫•y t√†i kho·∫£n c·∫ßn chuy·ªÉn!");
                                    }
                                    break;
                                    case 4:
                                    {
                                        double tienThanhToan=xuLyDouble("Nh·∫≠p s·ªë ti·ªÅn thanh to√°n:");
                                        if(tienThanhToan<=taikhoanTT.getSodu())
                                        {
                                            taikhoan.TaoOTP();
                                            soLanNhapSai=1;
                                            do
                                            {
                                                System.out.printf("Nh·∫≠p m√£ OTP ƒë·ªÉ thanh to√°n l·∫ßn %d/5:",soLanNhapSai);
                                                maOTP=sc.nextLine();
                                                if(taikhoan.kiemTraMaOTP(maOTP))
                                                {

                                                    taikhoanTT.rutTien(tienThanhToan);
                                                    System.out.printf("B·∫°n ƒë√£ thanh to√°n th√†nh c√¥ng %.0f ƒë",tienThanhToan);
                                                    taikhoan.ThemLichSu("\nB·∫°n ƒë√£ thanh to√°n ƒëi·ªán,n∆∞·ªõc,wifi,.. "+tienThanhToan+"00ƒë l√∫c "+LocalDateTime.now().format(formatter).toString());
                                                }
                                                else
                                                {
                                                    System.out.println("M√£ OTP kh√¥ng ƒë√∫ng.Vui l√≤ng nh·∫≠p l·∫°i!");
                                                    soLanNhapSai++;
                                                }
                                            }
                                            while(soLanNhapSai<=5 && !taikhoan.kiemTraMaOTP(maOTP));
                                        }
                                        else
                                            System.out.println("S·ªë ti·ªÅn trong t√†i kho·∫£n thanh to√°n kh√¥ng ƒë·ªß ƒë·ªÉ thanh to√°n!");

                                    }
                                    break;
                                   
                                    case 5:
                                    {
                                        if(taikhoanTT.getSoNo()!=0)
                                            System.out.printf("\nS·ªë d∆∞ t√†i kho·∫£n thanh to√°n c·ªßa b·∫°n l√†:%.0fƒë | (N·ª£ %.0fƒë.Th·ªùi gian c√≤n l·∫°i ƒë·ªÉ tr·∫£ l√†:%.0f Ng√†y)\n",taikhoanTT.getSodu(),taikhoanTT.getSoNo(),taikhoanTT.ThoiGianConLai()); 
                                        else
                                            System.out.printf("\nS·ªë d∆∞ t√†i kho·∫£n thanh to√°n c·ªßa b·∫°n l√†:%.0fƒë\n",taikhoanTT.getSodu());  
                                    
                                    }break;
                                    case 6:
                                    {
                                        if(!taikhoan.getLocket())
                                        {
                                            boolean kt=true;
                                            soLanNhapSai=1;
                                            do
                                            {
                                                System.out.printf("Nh·∫≠p m·∫≠t kh·∫©u c≈© ƒë·ªÉ ƒë·ªïi m·∫≠t kh·∫©u l·∫ßn %d/5:",soLanNhapSai);
                                                matkhau=sc.nextLine();
                                                if(taikhoan.kiemtraMatKhau(matkhau))
                                                {
                                                    System.out.print("Nh·∫≠p m·∫≠t kh·∫©u m·ªõi c·∫ßn ƒë·ªïi(M·∫≠t kh·∫©u ph·∫£i ch·ª©a k√≠ t·ª± Hoa,Th∆∞·ªùng,S·ªë v√† ƒë·ªß 5 k√≠ t·ª±):");
                                                    String mkMoi=sc.nextLine();
                                                    if(kiemTraMatKhauHopLe(mkMoi))
                                                    {
                                                        taikhoan.doiMatKhau(mkMoi);
                                                        kt=false;
                                                    }
                                                    else    
                                                        System.out.println("Nh·∫≠p m·∫≠t kh·∫©u kh√¥ng tho·∫£i m√£n!");
                                                }
                                                else
                                                    soLanNhapSai++;
                                            }while(kt && soLanNhapSai<=5);
                                            if(soLanNhapSai>5)
                                            {
                                                taikhoan.khoaTaiKhoan(5,"");
                                                break;
                                            }
                                        }
                                        else
                                            System.out.println("T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã kho√°.Vui l√≤ng ch·ªù 5 ph√∫t");           
                                    }
                                    break;
                                    case 7:
                                        if(taikhoan.lichSu!="")
                                            System.out.println(taikhoan.lichSu);
                                        else
                                            System.out.println("\nCh∆∞a c√≥ th√¥ng tin bi·∫øn ƒë·ªông");
                                    break;
                                    case 0:
                                         
                                        break;                      
                                    default:
                                        System.out.println("\nL·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.");
                                        break;
                                      
                                    }
                                
                                    
                                }while (lc!=0);     
                        }
                        else                
                            System.out.println("T√†i kho·∫£ng c·ªßa b·∫°n ƒë√£ b·ªã kho√° !");
                    }
                    else
                        System.out.println("T√†i kho·∫£ng kh√¥ng h·ª£p l·ªá!");              
                }
                break;
                case 3:
                {
                    System.out.print("Nh·∫≠p s·ªë t√†i kho·∫£n mu·ªën kh√¥i ph·ª•c m·∫≠t kh·∫©u: ");
                    stk = sc.nextLine();
                    TaiKhoan taikhoan = DS.searchAcount(stk);

                    if (taikhoan != null) 
                    {
                        System.out.print("Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u: ");
                        SDT = sc.nextLine();
                        dem=1;
                        boolean kt=true;
                        if (taikhoan.ktSDT(SDT)) 
                        {
                            do
                            {
                                System.out.printf("Nh·∫≠p m·∫≠t kh·∫©u m·ªõi lan %d/3:",dem);
                                String matKhauMoi = sc.nextLine();
                                if(kiemTraMatKhauHopLe(matKhauMoi))
                                {
                                    taikhoan.doiMatKhau(matKhauMoi);
                                    System.out.println("M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·ªïi th√†nh c√¥ng!");
                                    kt=false;
                                }
                                else    
                                {
                                    System.out.println("Nh·∫≠p m·∫≠t kh·∫©u kh√¥ng tho·∫£i m√£n!Vui l√≤ng nh·∫≠p l·∫°i");
                                    dem++;
                                }
                            }while(kt && dem<=3);
                        } 
                        else 
                            System.out.println("\ns·ªë ƒëi·ªán tho·∫°i kh√¥ng ƒë√∫ng.");
                    } 
                    else 
                        System.out.println("\nS·ªë t√†i kho·∫£n kh√¥ng t·ªìn t·∫°i.");
                }
                break;
                
                   
                case 0:
                    {
                        System.out.println("\nC·∫£m ∆°n qu√Ω kh√°ch ƒë√£ d√πng d·ªãch v·ª• ng√¢n h√†ng TinhBanküëã!");
                        Main.main(new String[]{});

                    }
                    break;
                default:
                    System.out.println("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
                    break;           
            }  
        } 
    }   
}
